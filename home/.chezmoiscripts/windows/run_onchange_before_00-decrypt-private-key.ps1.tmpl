<#
.SYNOPSIS
    This script decrypts an age-encrypted key file for Chezmoi on Windows.
.DESCRIPTION
    It checks if the decrypted key file exists at ~/.config/chezmoi/key.txt.
    If it does not exist, it creates the directory, decrypts the source file
    using `chezmoi age decrypt`, and then sets file permissions to give the
    current user exclusive full control, which is the equivalent of `chmod 600`.
#>
#Requires -Version 5.1

Set-StrictMode -Version Latest

$KeyFilePath = Join-Path $env:USERPROFILE ".config\chezmoi\key.txt"
$KeyFileDir = Split-Path -Path $KeyFilePath -Parent

if (-not (Test-Path -Path $KeyFilePath -PathType Leaf)) {
    
    Write-Verbose "Key file not found at '$KeyFilePath'. Proceeding with decryption."

    if (-not (Test-Path -Path $KeyFileDir -PathType Container)) {
        Write-Verbose "Creating directory: $KeyFileDir"
        New-Item -Path $KeyFileDir -ItemType Directory -Force | Out-Null
    }

    $EncryptedKeyPath = "{{ .chezmoi.sourceDir -}}\key.txt.age"

    Write-Verbose "Decrypting '$EncryptedKeyPath' to '$KeyFilePath'."
    chezmoi age decrypt --output $KeyFilePath --passphrase $EncryptedKeyPath

    Write-Verbose "Setting exclusive file permissions for the current user."

    $acl = Get-Acl -Path $KeyFilePath
    $acl.SetAccessRuleProtection($true, $false)
    $identity = [System.Security.Principal.WindowsIdentity]::GetCurrent().Name

    $rule = New-Object System.Security.AccessControl.FileSystemAccessRule(
        $identity,
        "FullControl",
        "Allow"
    )

    $acl.AddAccessRule($rule)

    Set-Acl -Path $KeyFilePath -AclObject $acl
    Write-Verbose "Permissions set successfully."
}
else {
    Write-Verbose "Key file already exists at '$KeyFilePath'. No action needed."
}